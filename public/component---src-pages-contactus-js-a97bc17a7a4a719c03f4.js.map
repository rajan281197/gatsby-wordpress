{"version":3,"file":"component---src-pages-contactus-js-a97bc17a7a4a719c03f4.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/pages/contactus.js"],"sourcesContent":["import * as React from \"react\"\nimport { useState } from 'react';\nimport Layout from \"../components/layout\"\nimport { useRef } from 'react';\nimport emailjs from 'emailjs-com';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Form, Button, Container, Row, Col, Alert } from 'react-bootstrap';\nimport ReCAPTCHA from \"react-google-recaptcha\";\n\nconst ContactusPage = ({ data }) => {\n  const [showMessage, setShowMessage] = useState(false);\n\n  const [values, setValues] = useState({\n    firstname: \"\",\n    user_email: \"\",\n    lastname: \"\",\n  });\n\n  const [formerrors, setFormErrors] = useState({});\n\n  const handleChange = (event) => {\n    //this console.log message should be removed once you've tested the event works \n    console.log(\n      \"handleChange -> \" + event.target.name + \" : \" + event.target.value\n    );\n    //this is the important bit\n    setValues((values) => ({\n      ...values,\n      [event.target.name]: event.target.value,\n    }));\n  };\n\n  const validate = () => {\n    console.log(\"Validate the form....\");\n\n    let errors = {};\n\n    //name field\n    if (!values.firstname) {\n      errors.firstname = \"First name is required\";\n    }\n\n    if (!values.lastname) {\n      errors.lastname = \"Last name is required\";\n    }\n\n\n\n    //email field\n    if (!values.user_email) {\n      errors.user_email = \"Email address is required\";\n    } else if (!/\\S+@\\S+\\.\\S+/.test(values.user_email)) {\n      errors.user_email = \"Email address is invalid\";\n    }\n\n    setFormErrors(errors);\n\n    if (Object.keys(errors).length === 0) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n  const onChange = (value) => {\n    console.log(\"Captcha value:\", value);\n  }\n\n  const form = useRef();\n\n  const sendEmail = (e) => {\n    e.preventDefault();\n\n    if (validate(values)) {\n      setShowMessage(true);\n    } else {\n      setShowMessage(false);\n    }\n\n    emailjs.sendForm('service_2yf5pvr', 'template_u2bz6lf', form.current, 'user_ZgnIladycCsitIjLLw8UO')\n      .then((result) => {\n        console.log(result.text);\n      }, (error) => {\n        console.log(error.text);\n      });\n  };\n\n\n  return (\n\n    <Layout pageTitle=\"\">\n\n      <>\n\n        <Container fluid=\"md\">\n\n          <Row>\n            <Col>\n              <Alert show={showMessage} variant=\"success\">\n                <Alert.Heading>Success</Alert.Heading>\n                <p>\n                  Thanks for the message! We Will Get Back to you Shortly.\n                </p>\n                <Button\n                  onClick={() => setShowMessage(false)}\n                  variant=\"outline-success\"\n                >\n                  Close this alert\n                </Button>\n\n              </Alert>\n            </Col>\n          </Row>\n\n          <Form ref={form} onSubmit={sendEmail} style={{ backgroundColor: \"#C1F1DC\" }}>\n            <fieldset className=\"scheduler\">\n              <legend className=\"borderlegend\">Contact US</legend>\n              <Row>\n\n                <Col>\n\n                  <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\" >\n                    <Form.Label>First Name</Form.Label>\n                    <Form.Control placeholder=\"Enter First name\" type=\"text\" name=\"firstname\" value={values.firstname} onChange={handleChange} />\n                    {formerrors.firstname && (<p className=\"text-danger\">{formerrors.firstname}</p>\n                    )}\n                  </Form.Group>\n                </Col>\n                <Col>\n                  <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                    <Form.Label>Last Name</Form.Label>\n                    <Form.Control placeholder=\"Enter Last name\" type=\"text\" name=\"lastname\" value={values.lastname} onChange={handleChange} />\n                    {formerrors.lastname && (<p className=\"text-danger\">{formerrors.lastname}</p>)}\n                  </Form.Group>\n                </Col>\n              </Row>\n              <Row>\n                <Col>\n                  <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                    <Form.Label>Email</Form.Label>\n                    <Form.Control placeholder=\"Enter Email ID\" type=\"email\" name=\"user_email\" value={values.user_email} onChange={handleChange} />\n                    {formerrors.user_email && (<p className=\"text-warning\">{formerrors.user_email}</p>)}\n                  </Form.Group>\n                </Col>\n                <Col>\n                  <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                    <Form.Label>Phone Number</Form.Label>\n                    <Form.Control placeholder=\"Enter Phone number\" type=\"tel\" name=\"phone\"\n                    />\n\n                  </Form.Group>\n                </Col>\n\n              </Row>\n\n\n\n              <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n                <Form.Label>Message</Form.Label>\n                <Form.Control as=\"textarea\" name=\"message\" rows={3} />\n              </Form.Group>\n\n              <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n                <ReCAPTCHA sitekey=\"6LcmbaMdAAAAAJz68enAze1ddTkz5V6seqyQ1--c\" onChange={onChange} theme=\"dark\" />\n              </Form.Group>\n\n              <Button variant=\"primary\" type=\"submit\" size=\"lg\" >\n                Send\n              </Button>\n            </fieldset>\n          </Form>\n\n        </Container>\n\n      </>\n\n    </Layout>\n  )\n}\n\n\nexport default ContactusPage\n\n\n"],"names":["data","useState","showMessage","setShowMessage","firstname","user_email","lastname","values","setValues","formerrors","setFormErrors","handleChange","event","console","log","target","name","value","form","useRef","pageTitle","fluid","show","variant","onClick","ref","onSubmit","e","preventDefault","errors","test","Object","keys","length","validate","emailjs","current","then","result","text","error","style","backgroundColor","className","controlId","placeholder","type","onChange","as","rows","sitekey","theme","size"],"sourceRoot":""}